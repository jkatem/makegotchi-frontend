[{"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/Tamagotchi.js":"1","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/reportWebVitals.js":"2","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/TamaStore.js":"3","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/FormRender.js":"4","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/App.js":"5","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/index.js":"6","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/SideNav.js":"7","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/UserPet.js":"8"},{"size":2351,"mtime":1608776712947,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608688579870,"results":"11","hashOfConfig":"10"},{"size":2448,"mtime":1608771892212,"results":"12","hashOfConfig":"10"},{"size":1168,"mtime":1608771892210,"results":"13","hashOfConfig":"10"},{"size":1561,"mtime":1608776424036,"results":"14","hashOfConfig":"10"},{"size":501,"mtime":1608771892228,"results":"15","hashOfConfig":"10"},{"size":1000,"mtime":1608771892211,"results":"16","hashOfConfig":"10"},{"size":848,"mtime":1608771892214,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ibr27g",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/Tamagotchi.js",[],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/reportWebVitals.js",[],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/TamaStore.js",[],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/FormRender.js",[],["37","38"],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/App.js",["39"],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/index.js",[],"/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/SideNav.js",["40","41"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RenderPetBtn from './RenderPetBtn';\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\n\nconst SideNav = ({purchasePets, userPets, handleIconClick}) => {\n    // appear after logged in\n    // render Alex's pets from Home\n    // buy pet buttons would trigger a callback function onClick.\n    // click on specific pet would trigger a callback function onClick.\n    // => re-render tamagotchi's screen\n\n    const renderBtns = () => {\n        return userPets.map(userPet => {\n            return (\n                <RenderPetBtn key={userPet.id} userPet={userPet} handleIconClick={handleIconClick} />\n            )\n        })\n    }\n\n    return(\n        <div className=\"sideNav\">\n            <h2>User's Tamagotchis</h2>\n            <Button variant=\"outline-warning\" onClick={purchasePets}>Buy Pet</Button>\n            <br /><br />\n            {renderBtns()}\n        </div>\n    )\n}\nexport default SideNav","/Users/marisayou/Flatiron/code/phase-4/phase-4-project/makegotchi-frontend/src/component/UserPet.js",["42","43"],"import React from 'react';\n// import { Link } from 'react-router-dom';\nimport UserPetBio from './UserPetBio';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst UserPet = ({ currentPet }) => {\n    if (currentPet) {\n        const { name, happiness_score, pet } = currentPet\n        return (\n            <div>\n                <Row>\n                    <h2>{name}</h2>\n                </Row>\n                <Row>\n                    <p>Happiness: {happiness_score}</p>\n                </Row>\n                <Row>\n                    <img id=\"pet-img\" src={pet.img_url} alt=\"Pet Image\" />\n                </Row>\n                <Row>\n                    <UserPetBio name={name} pet={pet} />\n                </Row>\n            </div>\n        )\n\n    }\n    else {\n        return <div></div>\n    }\n}\nexport default UserPet",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"53","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},{"ruleId":"48","severity":1,"message":"54","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":11},{"ruleId":"55","severity":1,"message":"56","line":19,"column":21,"nodeType":"57","endLine":19,"endColumn":75},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]